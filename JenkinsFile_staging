pipeline {
    agent any
    options {
        // This is required if you want to clean before build
        skipDefaultCheckout(true)
    }
    stages {
        stage('Get Code') {
            agent {
                label 'agente-ubuntu-01'
            }
            steps {
                // Clean before build
                cleanWs()
                // Obtener cÃ³digo del repo de la rama develop
                git branch: 'develop', url: 'https://github.com/aezum19c/casopractico1c.git'
				sh '''
				    wget https://raw.githubusercontent.com/aezum19c/casopractico1c-aws-config/staging/samconfig.toml
				'''
                stash name: 'code', includes: '**'
            }
        }
        stage('Static') {
            parallel{
                stage('flake8'){
                    agent { 
                        label 'agente-ubuntu-02'
                    }
                    steps {
                        unstash name: 'code'
                        sh '''
                            flake8 --exit-zero --format=pylint src > flake8.out
                        '''
                        recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates:[[threshold:10, type: 'TOTAL', unstable: false],[threshold: 12, type: 'TOTAL', unstable: false]]
                	}
                }
                stage('bandit') {
                    agent { 
                        label 'agente-ubuntu-02'
                    }
                    steps {
                        unstash name: 'code'
                	    sh '''
                			bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}:{line}: [{test_id}] {msg}"
                		'''
                		recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates:[[threshold:1, type: 'TOTAL', unstable: false],[threshold: 2, type: 'TOTAL', unstable: false]]
                	}
                }
            }
        }
        stage('Deploy') {
            agent {
                label 'agente-ubuntu-03'
            }
            steps {
                unstash name: 'code'
                sh '''
                    sam build
                    sam deploy --stack-name "todo-list-aws" --region "us-east-1" --resolve-s3 --no-fail-on-empty-changeset --on-failure DO_NOTHING
                '''
            }
        }
        stage('Rest') {
            agent { 
                label 'agente-ubuntu-03'
            }
            environment {
                BASE_URL = """${sh(
                        returnStdout: true,
                        script: 'sam list endpoints --stack-name todo-list-aws --region us-east-1 --output json | jq -r \'.[] | select(.LogicalResourceId=="ServerlessRestApi").CloudEndpoint | .[0]\' | tr -d \'\n\t\''
                    )}""" 
            }
            steps {
                unstash name: 'code'
                sh '''
                    pytest --junitxml=result-rest.xml test/integration/todoApiTest.py
                '''
            }
        }
        stage('Promote') {
            agent { 
                label 'agente-ubuntu-03'
            }
            steps {
                git branch: 'develop', url: 'https://github.com/aezum19c/casopractico1c.git'
                sh '''
                    git remote set-url origin https://x-access-token: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@github.com/aezum19c/casopractico1c.git
                    git checkout master
                    git merge develop
                    git push origin master
                '''
                // Clean after promote
                cleanWs()
            }
        }
    }
    post {
        // Clean after build
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true,
                    patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                               [pattern: '.propsfile', type: 'EXCLUDE']])
        }
    }
}